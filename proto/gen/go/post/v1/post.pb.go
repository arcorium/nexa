// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: post/v1/post.proto

package postv1

import (
	common "github.com/arcorium/nexa/proto/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Visibility int32

const (
	Visibility_PUBLIC   Visibility = 0
	Visibility_FOLLOWER Visibility = 1
	Visibility_ONLY_ME  Visibility = 2
)

// Enum value maps for Visibility.
var (
	Visibility_name = map[int32]string{
		0: "PUBLIC",
		1: "FOLLOWER",
		2: "ONLY_ME",
	}
	Visibility_value = map[string]int32{
		"PUBLIC":   0,
		"FOLLOWER": 1,
		"ONLY_ME":  2,
	}
)

func (x Visibility) Enum() *Visibility {
	p := new(Visibility)
	*p = x
	return p
}

func (x Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_post_v1_post_proto_enumTypes[0].Descriptor()
}

func (Visibility) Type() protoreflect.EnumType {
	return &file_post_v1_post_proto_enumTypes[0]
}

func (x Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Visibility.Descriptor instead.
func (Visibility) EnumDescriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{0}
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentPost    *Post                  `protobuf:"bytes,2,opt,name=parent_post,json=parentPost,proto3,oneof" json:"parent_post,omitempty"`
	CreatorId     string                 `protobuf:"bytes,3,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Visibility    Visibility             `protobuf:"varint,5,opt,name=visibility,proto3,enum=nexa.post.v1.Visibility" json:"visibility,omitempty"`
	LastEdited    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_edited,json=lastEdited,proto3,oneof" json:"last_edited,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TaggedUserIds []string               `protobuf:"bytes,8,rep,name=tagged_user_ids,json=taggedUserIds,proto3" json:"tagged_user_ids,omitempty"`
	MediaUrls     []string               `protobuf:"bytes,9,rep,name=media_urls,json=mediaUrls,proto3" json:"media_urls,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Post) GetParentPost() *Post {
	if x != nil {
		return x.ParentPost
	}
	return nil
}

func (x *Post) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Post) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_PUBLIC
}

func (x *Post) GetLastEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdited
	}
	return nil
}

func (x *Post) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Post) GetTaggedUserIds() []string {
	if x != nil {
		return x.TaggedUserIds
	}
	return nil
}

func (x *Post) GetMediaUrls() []string {
	if x != nil {
		return x.MediaUrls
	}
	return nil
}

type EditedPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    string             `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CreatorId string             `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Posts     []*EditedPost_Post `protobuf:"bytes,3,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *EditedPost) Reset() {
	*x = EditedPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditedPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditedPost) ProtoMessage() {}

func (x *EditedPost) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditedPost.ProtoReflect.Descriptor instead.
func (*EditedPost) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{1}
}

func (x *EditedPost) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *EditedPost) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *EditedPost) GetPosts() []*EditedPost_Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type FindPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *common.PagedElementOutput `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Posts   []*Post                    `protobuf:"bytes,2,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *FindPostResponse) Reset() {
	*x = FindPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPostResponse) ProtoMessage() {}

func (x *FindPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPostResponse.ProtoReflect.Descriptor instead.
func (*FindPostResponse) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{2}
}

func (x *FindPostResponse) GetDetails() *common.PagedElementOutput {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *FindPostResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type FindEditedPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *FindEditedPostRequest) Reset() {
	*x = FindEditedPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEditedPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEditedPostRequest) ProtoMessage() {}

func (x *FindEditedPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEditedPostRequest.ProtoReflect.Descriptor instead.
func (*FindEditedPostRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{3}
}

func (x *FindEditedPostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type FindEditedPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *EditedPost `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *FindEditedPostResponse) Reset() {
	*x = FindEditedPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEditedPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEditedPostResponse) ProtoMessage() {}

func (x *FindEditedPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEditedPostResponse.ProtoReflect.Descriptor instead.
func (*FindEditedPostResponse) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{4}
}

func (x *FindEditedPostResponse) GetPost() *EditedPost {
	if x != nil {
		return x.Post
	}
	return nil
}

type FindPostByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *FindPostByIdRequest) Reset() {
	*x = FindPostByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPostByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPostByIdRequest) ProtoMessage() {}

func (x *FindPostByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPostByIdRequest.ProtoReflect.Descriptor instead.
func (*FindPostByIdRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{5}
}

func (x *FindPostByIdRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type FindPostByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *FindPostByIdResponse) Reset() {
	*x = FindPostByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPostByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPostByIdResponse) ProtoMessage() {}

func (x *FindPostByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPostByIdResponse.ProtoReflect.Descriptor instead.
func (*FindPostByIdResponse) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{6}
}

func (x *FindPostByIdResponse) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

type FindUserPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  *string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Details *common.PagedElementInput `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *FindUserPostRequest) Reset() {
	*x = FindUserPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserPostRequest) ProtoMessage() {}

func (x *FindUserPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserPostRequest.ProtoReflect.Descriptor instead.
func (*FindUserPostRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{7}
}

func (x *FindUserPostRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *FindUserPostRequest) GetDetails() *common.PagedElementInput {
	if x != nil {
		return x.Details
	}
	return nil
}

type FindUserPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *common.PagedElementOutput `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Posts   []*Post                    `protobuf:"bytes,2,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *FindUserPostResponse) Reset() {
	*x = FindUserPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserPostResponse) ProtoMessage() {}

func (x *FindUserPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserPostResponse.ProtoReflect.Descriptor instead.
func (*FindUserPostResponse) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{8}
}

func (x *FindUserPostResponse) GetDetails() *common.PagedElementOutput {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *FindUserPostResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type CreatePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SharedPostId *string    `protobuf:"bytes,1,opt,name=shared_post_id,json=sharedPostId,proto3,oneof" json:"shared_post_id,omitempty"`
	Content      *string    `protobuf:"bytes,2,opt,name=content,proto3,oneof" json:"content,omitempty"`
	Visibility   Visibility `protobuf:"varint,3,opt,name=visibility,proto3,enum=nexa.post.v1.Visibility" json:"visibility,omitempty"`
	MediaIds     []string   `protobuf:"bytes,4,rep,name=media_ids,json=mediaIds,proto3" json:"media_ids,omitempty"`
	UserIds      []string   `protobuf:"bytes,5,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"` // Tags
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{9}
}

func (x *CreatePostRequest) GetSharedPostId() string {
	if x != nil && x.SharedPostId != nil {
		return *x.SharedPostId
	}
	return ""
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *CreatePostRequest) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_PUBLIC
}

func (x *CreatePostRequest) GetMediaIds() []string {
	if x != nil {
		return x.MediaIds
	}
	return nil
}

func (x *CreatePostRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type CreatePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *CreatePostResponse) Reset() {
	*x = CreatePostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostResponse) ProtoMessage() {}

func (x *CreatePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostResponse.ProtoReflect.Descriptor instead.
func (*CreatePostResponse) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePostResponse) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type UpdatePostVisibilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId        string     `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	NewVisibility Visibility `protobuf:"varint,2,opt,name=new_visibility,json=newVisibility,proto3,enum=nexa.post.v1.Visibility" json:"new_visibility,omitempty"`
}

func (x *UpdatePostVisibilityRequest) Reset() {
	*x = UpdatePostVisibilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostVisibilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostVisibilityRequest) ProtoMessage() {}

func (x *UpdatePostVisibilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostVisibilityRequest.ProtoReflect.Descriptor instead.
func (*UpdatePostVisibilityRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePostVisibilityRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *UpdatePostVisibilityRequest) GetNewVisibility() Visibility {
	if x != nil {
		return x.NewVisibility
	}
	return Visibility_PUBLIC
}

type EditPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId   string   `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Content  string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	MediaIds []string `protobuf:"bytes,4,rep,name=media_ids,json=mediaIds,proto3" json:"media_ids,omitempty"`
	UserIds  []string `protobuf:"bytes,5,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *EditPostRequest) Reset() {
	*x = EditPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPostRequest) ProtoMessage() {}

func (x *EditPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPostRequest.ProtoReflect.Descriptor instead.
func (*EditPostRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{12}
}

func (x *EditPostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *EditPostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EditPostRequest) GetMediaIds() []string {
	if x != nil {
		return x.MediaIds
	}
	return nil
}

func (x *EditPostRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type DeletePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *DeletePostRequest) Reset() {
	*x = DeletePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRequest) ProtoMessage() {}

func (x *DeletePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRequest.ProtoReflect.Descriptor instead.
func (*DeletePostRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{13}
}

func (x *DeletePostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type BookmarkPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *BookmarkPostRequest) Reset() {
	*x = BookmarkPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookmarkPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkPostRequest) ProtoMessage() {}

func (x *BookmarkPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkPostRequest.ProtoReflect.Descriptor instead.
func (*BookmarkPostRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{14}
}

func (x *BookmarkPostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type GetBookmarkedPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string user_id = 1; // Allow to get other bookmarked posts for authorized user
	Details *common.PagedElementInput `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetBookmarkedPostRequest) Reset() {
	*x = GetBookmarkedPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookmarkedPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookmarkedPostRequest) ProtoMessage() {}

func (x *GetBookmarkedPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookmarkedPostRequest.ProtoReflect.Descriptor instead.
func (*GetBookmarkedPostRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{15}
}

func (x *GetBookmarkedPostRequest) GetDetails() *common.PagedElementInput {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetBookmarkedPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts   []*Post                    `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	Details *common.PagedElementOutput `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetBookmarkedPostResponse) Reset() {
	*x = GetBookmarkedPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookmarkedPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookmarkedPostResponse) ProtoMessage() {}

func (x *GetBookmarkedPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookmarkedPostResponse.ProtoReflect.Descriptor instead.
func (*GetBookmarkedPostResponse) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{16}
}

func (x *GetBookmarkedPostResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *GetBookmarkedPostResponse) GetDetails() *common.PagedElementOutput {
	if x != nil {
		return x.Details
	}
	return nil
}

type ClearUserPostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ClearUserPostsRequest) Reset() {
	*x = ClearUserPostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUserPostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserPostsRequest) ProtoMessage() {}

func (x *ClearUserPostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserPostsRequest.ProtoReflect.Descriptor instead.
func (*ClearUserPostsRequest) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{17}
}

func (x *ClearUserPostsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EditedPost_Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TaggedUserIds []string               `protobuf:"bytes,8,rep,name=tagged_user_ids,json=taggedUserIds,proto3" json:"tagged_user_ids,omitempty"`
	MediaUrls     []string               `protobuf:"bytes,9,rep,name=media_urls,json=mediaUrls,proto3" json:"media_urls,omitempty"`
}

func (x *EditedPost_Post) Reset() {
	*x = EditedPost_Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_post_v1_post_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditedPost_Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditedPost_Post) ProtoMessage() {}

func (x *EditedPost_Post) ProtoReflect() protoreflect.Message {
	mi := &file_post_v1_post_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditedPost_Post.ProtoReflect.Descriptor instead.
func (*EditedPost_Post) Descriptor() ([]byte, []int) {
	return file_post_v1_post_proto_rawDescGZIP(), []int{1, 0}
}

func (x *EditedPost_Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EditedPost_Post) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EditedPost_Post) GetTaggedUserIds() []string {
	if x != nil {
		return x.TaggedUserIds
	}
	return nil
}

func (x *EditedPost_Post) GetMediaUrls() []string {
	if x != nil {
		return x.MediaUrls
	}
	return nil
}

var File_post_v1_post_proto protoreflect.FileDescriptor

var file_post_v1_post_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x03, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x67, 0x67, 0x65,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x73, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x22, 0x9e,
	0x02, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x1a, 0xa2, 0x01, 0x0a, 0x04, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x67, 0x67,
	0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x73, 0x22,
	0x77, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28,
	0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64,
	0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x16, 0x46, 0x69,
	0x6e, 0x64, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x22, 0x2e, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x3e, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x22, 0x79, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x7b, 0x0a,
	0x14, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x28, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x78,
	0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0x7c, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x2e, 0x0a, 0x13, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e,
	0x65, 0x78, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x33, 0x0a, 0x0a, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x43, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4d, 0x45, 0x10, 0x02, 0x32,
	0xef, 0x06, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x46, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x1e, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64, 0x45,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x23, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6e, 0x65, 0x78,
	0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x6e,
	0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x29, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x04, 0x45,
	0x64, 0x69, 0x74, 0x12, 0x1d, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a,
	0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x21, 0x2e, 0x6e, 0x65, 0x78, 0x61,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x60, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x26, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0xa5, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x72, 0x63, 0x6f, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x6e, 0x65, 0x78, 0x61, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x6f, 0x73, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x50, 0x58, 0xaa,
	0x02, 0x0c, 0x4e, 0x65, 0x78, 0x61, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0c, 0x4e, 0x65, 0x78, 0x61, 0x5c, 0x50, 0x6f, 0x73, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18,
	0x4e, 0x65, 0x78, 0x61, 0x5c, 0x50, 0x6f, 0x73, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4e, 0x65, 0x78, 0x61, 0x3a,
	0x3a, 0x50, 0x6f, 0x73, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_post_v1_post_proto_rawDescOnce sync.Once
	file_post_v1_post_proto_rawDescData = file_post_v1_post_proto_rawDesc
)

func file_post_v1_post_proto_rawDescGZIP() []byte {
	file_post_v1_post_proto_rawDescOnce.Do(func() {
		file_post_v1_post_proto_rawDescData = protoimpl.X.CompressGZIP(file_post_v1_post_proto_rawDescData)
	})
	return file_post_v1_post_proto_rawDescData
}

var file_post_v1_post_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_post_v1_post_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_post_v1_post_proto_goTypes = []interface{}{
	(Visibility)(0),                     // 0: nexa.post.v1.Visibility
	(*Post)(nil),                        // 1: nexa.post.v1.Post
	(*EditedPost)(nil),                  // 2: nexa.post.v1.EditedPost
	(*FindPostResponse)(nil),            // 3: nexa.post.v1.FindPostResponse
	(*FindEditedPostRequest)(nil),       // 4: nexa.post.v1.FindEditedPostRequest
	(*FindEditedPostResponse)(nil),      // 5: nexa.post.v1.FindEditedPostResponse
	(*FindPostByIdRequest)(nil),         // 6: nexa.post.v1.FindPostByIdRequest
	(*FindPostByIdResponse)(nil),        // 7: nexa.post.v1.FindPostByIdResponse
	(*FindUserPostRequest)(nil),         // 8: nexa.post.v1.FindUserPostRequest
	(*FindUserPostResponse)(nil),        // 9: nexa.post.v1.FindUserPostResponse
	(*CreatePostRequest)(nil),           // 10: nexa.post.v1.CreatePostRequest
	(*CreatePostResponse)(nil),          // 11: nexa.post.v1.CreatePostResponse
	(*UpdatePostVisibilityRequest)(nil), // 12: nexa.post.v1.UpdatePostVisibilityRequest
	(*EditPostRequest)(nil),             // 13: nexa.post.v1.EditPostRequest
	(*DeletePostRequest)(nil),           // 14: nexa.post.v1.DeletePostRequest
	(*BookmarkPostRequest)(nil),         // 15: nexa.post.v1.BookmarkPostRequest
	(*GetBookmarkedPostRequest)(nil),    // 16: nexa.post.v1.GetBookmarkedPostRequest
	(*GetBookmarkedPostResponse)(nil),   // 17: nexa.post.v1.GetBookmarkedPostResponse
	(*ClearUserPostsRequest)(nil),       // 18: nexa.post.v1.ClearUserPostsRequest
	(*EditedPost_Post)(nil),             // 19: nexa.post.v1.EditedPost.Post
	(*timestamppb.Timestamp)(nil),       // 20: google.protobuf.Timestamp
	(*common.PagedElementOutput)(nil),   // 21: nexa.common.PagedElementOutput
	(*common.PagedElementInput)(nil),    // 22: nexa.common.PagedElementInput
	(*emptypb.Empty)(nil),               // 23: google.protobuf.Empty
}
var file_post_v1_post_proto_depIdxs = []int32{
	1,  // 0: nexa.post.v1.Post.parent_post:type_name -> nexa.post.v1.Post
	0,  // 1: nexa.post.v1.Post.visibility:type_name -> nexa.post.v1.Visibility
	20, // 2: nexa.post.v1.Post.last_edited:type_name -> google.protobuf.Timestamp
	20, // 3: nexa.post.v1.Post.created_at:type_name -> google.protobuf.Timestamp
	19, // 4: nexa.post.v1.EditedPost.posts:type_name -> nexa.post.v1.EditedPost.Post
	21, // 5: nexa.post.v1.FindPostResponse.details:type_name -> nexa.common.PagedElementOutput
	1,  // 6: nexa.post.v1.FindPostResponse.posts:type_name -> nexa.post.v1.Post
	2,  // 7: nexa.post.v1.FindEditedPostResponse.post:type_name -> nexa.post.v1.EditedPost
	1,  // 8: nexa.post.v1.FindPostByIdResponse.post:type_name -> nexa.post.v1.Post
	22, // 9: nexa.post.v1.FindUserPostRequest.details:type_name -> nexa.common.PagedElementInput
	21, // 10: nexa.post.v1.FindUserPostResponse.details:type_name -> nexa.common.PagedElementOutput
	1,  // 11: nexa.post.v1.FindUserPostResponse.posts:type_name -> nexa.post.v1.Post
	0,  // 12: nexa.post.v1.CreatePostRequest.visibility:type_name -> nexa.post.v1.Visibility
	0,  // 13: nexa.post.v1.UpdatePostVisibilityRequest.new_visibility:type_name -> nexa.post.v1.Visibility
	22, // 14: nexa.post.v1.GetBookmarkedPostRequest.details:type_name -> nexa.common.PagedElementInput
	1,  // 15: nexa.post.v1.GetBookmarkedPostResponse.posts:type_name -> nexa.post.v1.Post
	21, // 16: nexa.post.v1.GetBookmarkedPostResponse.details:type_name -> nexa.common.PagedElementOutput
	20, // 17: nexa.post.v1.EditedPost.Post.created_at:type_name -> google.protobuf.Timestamp
	22, // 18: nexa.post.v1.PostService.Find:input_type -> nexa.common.PagedElementInput
	4,  // 19: nexa.post.v1.PostService.FindEdited:input_type -> nexa.post.v1.FindEditedPostRequest
	6,  // 20: nexa.post.v1.PostService.FindById:input_type -> nexa.post.v1.FindPostByIdRequest
	8,  // 21: nexa.post.v1.PostService.FindUsers:input_type -> nexa.post.v1.FindUserPostRequest
	10, // 22: nexa.post.v1.PostService.Create:input_type -> nexa.post.v1.CreatePostRequest
	12, // 23: nexa.post.v1.PostService.UpdateVisibility:input_type -> nexa.post.v1.UpdatePostVisibilityRequest
	13, // 24: nexa.post.v1.PostService.Edit:input_type -> nexa.post.v1.EditPostRequest
	14, // 25: nexa.post.v1.PostService.Delete:input_type -> nexa.post.v1.DeletePostRequest
	15, // 26: nexa.post.v1.PostService.Bookmark:input_type -> nexa.post.v1.BookmarkPostRequest
	16, // 27: nexa.post.v1.PostService.GetBookmarked:input_type -> nexa.post.v1.GetBookmarkedPostRequest
	18, // 28: nexa.post.v1.PostService.ClearUsers:input_type -> nexa.post.v1.ClearUserPostsRequest
	3,  // 29: nexa.post.v1.PostService.Find:output_type -> nexa.post.v1.FindPostResponse
	5,  // 30: nexa.post.v1.PostService.FindEdited:output_type -> nexa.post.v1.FindEditedPostResponse
	7,  // 31: nexa.post.v1.PostService.FindById:output_type -> nexa.post.v1.FindPostByIdResponse
	9,  // 32: nexa.post.v1.PostService.FindUsers:output_type -> nexa.post.v1.FindUserPostResponse
	11, // 33: nexa.post.v1.PostService.Create:output_type -> nexa.post.v1.CreatePostResponse
	23, // 34: nexa.post.v1.PostService.UpdateVisibility:output_type -> google.protobuf.Empty
	23, // 35: nexa.post.v1.PostService.Edit:output_type -> google.protobuf.Empty
	23, // 36: nexa.post.v1.PostService.Delete:output_type -> google.protobuf.Empty
	23, // 37: nexa.post.v1.PostService.Bookmark:output_type -> google.protobuf.Empty
	17, // 38: nexa.post.v1.PostService.GetBookmarked:output_type -> nexa.post.v1.GetBookmarkedPostResponse
	23, // 39: nexa.post.v1.PostService.ClearUsers:output_type -> google.protobuf.Empty
	29, // [29:40] is the sub-list for method output_type
	18, // [18:29] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_post_v1_post_proto_init() }
func file_post_v1_post_proto_init() {
	if File_post_v1_post_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_post_v1_post_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditedPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEditedPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEditedPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPostByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPostByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePostVisibilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookmarkPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookmarkedPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookmarkedPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUserPostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_post_v1_post_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditedPost_Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_post_v1_post_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_post_v1_post_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_post_v1_post_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_post_v1_post_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_post_v1_post_proto_goTypes,
		DependencyIndexes: file_post_v1_post_proto_depIdxs,
		EnumInfos:         file_post_v1_post_proto_enumTypes,
		MessageInfos:      file_post_v1_post_proto_msgTypes,
	}.Build()
	File_post_v1_post_proto = out.File
	file_post_v1_post_proto_rawDesc = nil
	file_post_v1_post_proto_goTypes = nil
	file_post_v1_post_proto_depIdxs = nil
}
