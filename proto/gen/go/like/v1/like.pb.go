// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: like/v1/like.proto

package likev1

import (
	common "github.com/arcorium/nexa/proto/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_POST    Type = 0
	Type_COMMENT Type = 1
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "POST",
		1: "COMMENT",
	}
	Type_value = map[string]int32{
		"POST":    0,
		"COMMENT": 1,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_like_v1_like_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_like_v1_like_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{0}
}

type LikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType Type   `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=nexa.like.v1.Type" json:"item_type,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LikeRequest) Reset() {
	*x = LikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeRequest) ProtoMessage() {}

func (x *LikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeRequest.ProtoReflect.Descriptor instead.
func (*LikeRequest) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{0}
}

func (x *LikeRequest) GetItemType() Type {
	if x != nil {
		return x.ItemType
	}
	return Type_POST
}

func (x *LikeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DislikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType Type   `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=nexa.like.v1.Type" json:"item_type,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DislikeRequest) Reset() {
	*x = DislikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeRequest) ProtoMessage() {}

func (x *DislikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeRequest.ProtoReflect.Descriptor instead.
func (*DislikeRequest) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{1}
}

func (x *DislikeRequest) GetItemType() Type {
	if x != nil {
		return x.ItemType
	}
	return Type_POST
}

func (x *DislikeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLikedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType Type                      `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=nexa.like.v1.Type" json:"item_type,omitempty"`
	Details  *common.PagedElementInput `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetLikedRequest) Reset() {
	*x = GetLikedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedRequest) ProtoMessage() {}

func (x *GetLikedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedRequest.ProtoReflect.Descriptor instead.
func (*GetLikedRequest) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{2}
}

func (x *GetLikedRequest) GetItemType() Type {
	if x != nil {
		return x.ItemType
	}
	return Type_POST
}

func (x *GetLikedRequest) GetDetails() *common.PagedElementInput {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetLikedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType Type                       `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=nexa.like.v1.Type" json:"item_type,omitempty"`
	Ids      []string                   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	Details  *common.PagedElementOutput `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetLikedResponse) Reset() {
	*x = GetLikedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedResponse) ProtoMessage() {}

func (x *GetLikedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedResponse.ProtoReflect.Descriptor instead.
func (*GetLikedResponse) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{3}
}

func (x *GetLikedResponse) GetItemType() Type {
	if x != nil {
		return x.ItemType
	}
	return Type_POST
}

func (x *GetLikedResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetLikedResponse) GetDetails() *common.PagedElementOutput {
	if x != nil {
		return x.Details
	}
	return nil
}

type GetCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType Type     `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=nexa.like.v1.Type" json:"item_type,omitempty"`
	Ids      []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetCountRequest) Reset() {
	*x = GetCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountRequest) ProtoMessage() {}

func (x *GetCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountRequest.ProtoReflect.Descriptor instead.
func (*GetCountRequest) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{4}
}

func (x *GetCountRequest) GetItemType() Type {
	if x != nil {
		return x.ItemType
	}
	return Type_POST
}

func (x *GetCountRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalLikes    uint64 `protobuf:"varint,1,opt,name=total_likes,json=totalLikes,proto3" json:"total_likes,omitempty"`
	TotalDislikes uint64 `protobuf:"varint,2,opt,name=total_dislikes,json=totalDislikes,proto3" json:"total_dislikes,omitempty"`
}

func (x *Count) Reset() {
	*x = Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Count) ProtoMessage() {}

func (x *Count) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Count.ProtoReflect.Descriptor instead.
func (*Count) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{5}
}

func (x *Count) GetTotalLikes() uint64 {
	if x != nil {
		return x.TotalLikes
	}
	return 0
}

func (x *Count) GetTotalDislikes() uint64 {
	if x != nil {
		return x.TotalDislikes
	}
	return 0
}

type GetCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counts []*Count `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *GetCountResponse) Reset() {
	*x = GetCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountResponse) ProtoMessage() {}

func (x *GetCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountResponse.ProtoReflect.Descriptor instead.
func (*GetCountResponse) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{6}
}

func (x *GetCountResponse) GetCounts() []*Count {
	if x != nil {
		return x.Counts
	}
	return nil
}

type ClearUserLikesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ClearUserLikesRequest) Reset() {
	*x = ClearUserLikesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUserLikesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserLikesRequest) ProtoMessage() {}

func (x *ClearUserLikesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserLikesRequest.ProtoReflect.Descriptor instead.
func (*ClearUserLikesRequest) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{7}
}

func (x *ClearUserLikesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteLikesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType Type     `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=nexa.like.v1.Type" json:"item_type,omitempty"`
	ItemIds  []string `protobuf:"bytes,2,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
}

func (x *DeleteLikesRequest) Reset() {
	*x = DeleteLikesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_like_v1_like_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLikesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLikesRequest) ProtoMessage() {}

func (x *DeleteLikesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_v1_like_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLikesRequest.ProtoReflect.Descriptor instead.
func (*DeleteLikesRequest) Descriptor() ([]byte, []int) {
	return file_like_v1_like_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLikesRequest) GetItemType() Type {
	if x != nil {
		return x.ItemType
	}
	return Type_POST
}

func (x *DeleteLikesRequest) GetItemIds() []string {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

var File_like_v1_like_proto protoreflect.FileDescriptor

var file_like_v1_like_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69,
	0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x78, 0x61,
	0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e,
	0x65, 0x78, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x39, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4f,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22,
	0x3f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x22, 0x30, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x60, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6e, 0x65,
	0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x73, 0x2a, 0x1d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x4f, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x32, 0xb2, 0x03, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x19, 0x2e, 0x6e, 0x65,
	0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f,
	0x0a, 0x07, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x1c, 0x2e, 0x6e, 0x65, 0x78, 0x61,
	0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x6e, 0x65,
	0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x65, 0x78,
	0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69,
	0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x20, 0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x6e, 0x65,
	0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0xa5, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d,
	0x2e, 0x6e, 0x65, 0x78, 0x61, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x4c,
	0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x63, 0x6f, 0x72, 0x69, 0x75, 0x6d, 0x2f,
	0x6e, 0x65, 0x78, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x69, 0x6b, 0x65, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x4e, 0x4c, 0x58, 0xaa, 0x02, 0x0c, 0x4e, 0x65, 0x78, 0x61, 0x2e, 0x4c, 0x69,
	0x6b, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x4e, 0x65, 0x78, 0x61, 0x5c, 0x4c, 0x69, 0x6b,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x4e, 0x65, 0x78, 0x61, 0x5c, 0x4c, 0x69, 0x6b, 0x65,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x4e, 0x65, 0x78, 0x61, 0x3a, 0x3a, 0x4c, 0x69, 0x6b, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_like_v1_like_proto_rawDescOnce sync.Once
	file_like_v1_like_proto_rawDescData = file_like_v1_like_proto_rawDesc
)

func file_like_v1_like_proto_rawDescGZIP() []byte {
	file_like_v1_like_proto_rawDescOnce.Do(func() {
		file_like_v1_like_proto_rawDescData = protoimpl.X.CompressGZIP(file_like_v1_like_proto_rawDescData)
	})
	return file_like_v1_like_proto_rawDescData
}

var file_like_v1_like_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_like_v1_like_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_like_v1_like_proto_goTypes = []interface{}{
	(Type)(0),                         // 0: nexa.like.v1.Type
	(*LikeRequest)(nil),               // 1: nexa.like.v1.LikeRequest
	(*DislikeRequest)(nil),            // 2: nexa.like.v1.DislikeRequest
	(*GetLikedRequest)(nil),           // 3: nexa.like.v1.GetLikedRequest
	(*GetLikedResponse)(nil),          // 4: nexa.like.v1.GetLikedResponse
	(*GetCountRequest)(nil),           // 5: nexa.like.v1.GetCountRequest
	(*Count)(nil),                     // 6: nexa.like.v1.Count
	(*GetCountResponse)(nil),          // 7: nexa.like.v1.GetCountResponse
	(*ClearUserLikesRequest)(nil),     // 8: nexa.like.v1.ClearUserLikesRequest
	(*DeleteLikesRequest)(nil),        // 9: nexa.like.v1.DeleteLikesRequest
	(*common.PagedElementInput)(nil),  // 10: nexa.common.PagedElementInput
	(*common.PagedElementOutput)(nil), // 11: nexa.common.PagedElementOutput
	(*emptypb.Empty)(nil),             // 12: google.protobuf.Empty
}
var file_like_v1_like_proto_depIdxs = []int32{
	0,  // 0: nexa.like.v1.LikeRequest.item_type:type_name -> nexa.like.v1.Type
	0,  // 1: nexa.like.v1.DislikeRequest.item_type:type_name -> nexa.like.v1.Type
	0,  // 2: nexa.like.v1.GetLikedRequest.item_type:type_name -> nexa.like.v1.Type
	10, // 3: nexa.like.v1.GetLikedRequest.details:type_name -> nexa.common.PagedElementInput
	0,  // 4: nexa.like.v1.GetLikedResponse.item_type:type_name -> nexa.like.v1.Type
	11, // 5: nexa.like.v1.GetLikedResponse.details:type_name -> nexa.common.PagedElementOutput
	0,  // 6: nexa.like.v1.GetCountRequest.item_type:type_name -> nexa.like.v1.Type
	6,  // 7: nexa.like.v1.GetCountResponse.counts:type_name -> nexa.like.v1.Count
	0,  // 8: nexa.like.v1.DeleteLikesRequest.item_type:type_name -> nexa.like.v1.Type
	1,  // 9: nexa.like.v1.LikeService.Like:input_type -> nexa.like.v1.LikeRequest
	2,  // 10: nexa.like.v1.LikeService.Dislike:input_type -> nexa.like.v1.DislikeRequest
	3,  // 11: nexa.like.v1.LikeService.GetLiked:input_type -> nexa.like.v1.GetLikedRequest
	5,  // 12: nexa.like.v1.LikeService.GetCount:input_type -> nexa.like.v1.GetCountRequest
	9,  // 13: nexa.like.v1.LikeService.Delete:input_type -> nexa.like.v1.DeleteLikesRequest
	8,  // 14: nexa.like.v1.LikeService.ClearUserLikes:input_type -> nexa.like.v1.ClearUserLikesRequest
	12, // 15: nexa.like.v1.LikeService.Like:output_type -> google.protobuf.Empty
	12, // 16: nexa.like.v1.LikeService.Dislike:output_type -> google.protobuf.Empty
	4,  // 17: nexa.like.v1.LikeService.GetLiked:output_type -> nexa.like.v1.GetLikedResponse
	7,  // 18: nexa.like.v1.LikeService.GetCount:output_type -> nexa.like.v1.GetCountResponse
	12, // 19: nexa.like.v1.LikeService.Delete:output_type -> google.protobuf.Empty
	12, // 20: nexa.like.v1.LikeService.ClearUserLikes:output_type -> google.protobuf.Empty
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_like_v1_like_proto_init() }
func file_like_v1_like_proto_init() {
	if File_like_v1_like_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_like_v1_like_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUserLikesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_like_v1_like_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLikesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_like_v1_like_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_like_v1_like_proto_goTypes,
		DependencyIndexes: file_like_v1_like_proto_depIdxs,
		EnumInfos:         file_like_v1_like_proto_enumTypes,
		MessageInfos:      file_like_v1_like_proto_msgTypes,
	}.Build()
	File_like_v1_like_proto = out.File
	file_like_v1_like_proto_rawDesc = nil
	file_like_v1_like_proto_goTypes = nil
	file_like_v1_like_proto_depIdxs = nil
}
