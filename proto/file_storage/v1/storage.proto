syntax = "proto3";
package nexa.storage.v1;
option go_package = "nexa/proto/gen/go/file_storage/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service FileStorageService {
  rpc Find(FindFileRequest) returns (stream FindFileResponse);
  rpc FindMetadata(FindFileMetadataRequest) returns (FindFileMetadataResponse);
  rpc Store(stream StoreFileRequest) returns (StoreFileResponse);
  rpc Update(UpdateFileRequest) returns (google.protobuf.Empty);
  rpc Delete(DeleteFileRequest) returns (google.protobuf.Empty);
}

message File {
  string id = 1;
  string name = 2;
  uint64 size = 3;
  string path = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp last_modified = 6;
}

message FindFileRequest {
  string file_id = 1;
}

message FindFileResponse {
  string filename = 1;
  bytes chunk = 2;
}

message FindFileMetadataRequest {
  string file_id = 1;
}

message FindFileMetadataResponse {
  File file = 1;
}

message StoreFileRequest {
  string filename = 1;
  bool is_public = 2;
  bytes chunk = 3;
}

message StoreFileResponse {
  string file_id = 1;
  optional string filepath = 2; // when is_public is on, it will also returns the public path
}

message UpdateFileRequest {
  string file_id = 1;
//  optional string filename = 2;
  bool is_public = 3;
}

message DeleteFileRequest {
  string file_id = 1;
}