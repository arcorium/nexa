syntax = "proto3";

package nexa.proto.generated.authorization.v1;
option go_package = "nexa/proto/generated/golang/authorization/v1";

import "google/protobuf/empty.proto";
import "common/paged.proto";
import "authorization/v1/message.proto";

service PermissionService {
  rpc Create(PermissionCreateRequest) returns (PermissionCreateResponse);
  rpc Find(PermissionFindRequest) returns (FindPermissionResponse);
  rpc FindByRoles(FindPermissionByRolesRequest) returns (FindPermissionByRolesResponse);
  rpc FindAll(common.PagedElementInput) returns (PermissionFindAllResponse);
  rpc Delete(PermissionDeleteRequest) returns (google.protobuf.Empty);
}

message PermissionCreateRequest {
  string code = 1;
}

message PermissionCreateResponse {
  string id = 1;
}

message PermissionFindRequest {
  repeated string perm_ids = 1;
}

message FindPermissionResponse {
  repeated Permission permission = 1;
}

message PermissionFindAllResponse {
  common.PagedElementOutput details = 1;
  repeated Permission permissions = 2;
}

message PermissionDeleteRequest {
  string id = 1;
}

message FindPermissionByRolesRequest {

}

message FindPermissionByRolesResponse {

}