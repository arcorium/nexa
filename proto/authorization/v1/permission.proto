syntax = "proto3";

package nexa.authorization.v1;
option go_package = "nexa/proto/generated/golang/authorization/v1";

import "google/protobuf/empty.proto";
import "common/paged.proto";
import "authorization/v1/message.proto";

service PermissionService {
  rpc Create(CreatePermissionRequest) returns (CreatePermissionResponse);
  rpc Find(FindPermissionRequest) returns (FindPermissionResponse);
  rpc FindByRoles(FindPermissionsByRoleRequest) returns (FindPermissionByRoleResponse);
  rpc FindAll(common.PagedElementInput) returns (FindAllPermissionResponse);
  rpc Delete(DeletePermissionRequest) returns (google.protobuf.Empty);

  // Protected API
  rpc Seed(SeedPermissionRequest) returns (SeedPermissionResponse);
}

message CreatePermissionRequest {
  string resource = 1; // could be service name
  string action = 2;
}

message CreatePermissionResponse {
  string permission_id = 1;
}

message FindPermissionRequest {
  repeated string perm_ids = 1;
}

message FindPermissionResponse {
  repeated Permission permission = 1;
}

message FindAllPermissionResponse {
  common.PagedElementOutput details = 1;
  repeated Permission permissions = 2;
}

message DeletePermissionRequest {
  string id = 1;
}

message FindPermissionsByRoleRequest {
  repeated string role_ids = 1;
}

message FindPermissionByRoleResponse {
  repeated Permission permissions = 1;
}

message SeedPermissionRequest {
  repeated CreatePermissionRequest permissions = 1;
}

message SeedPermissionResponse {
  repeated string permission_ids = 1;
}