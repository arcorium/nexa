syntax = "proto3";
package services.authorization.schema.proto.v1;
option go_package = "nexa/services/authorization/shared/proto";

import "google/protobuf/empty.proto";
import "arc/paged.proto";

service PermissionService {
  rpc Create(PermissionCreateInput) returns (PermissionCreateOutput);
  rpc Find(PermissionFindInput) returns (PermissionResponse);
  rpc FindAll(arc.PagedElementInput) returns (PermissionFindAllOutput);
  rpc Delete(PermissionDeleteInput) returns (google.protobuf.Empty);
  rpc CheckUser(CheckUserInput) returns (google.protobuf.Empty);
}

message PermissionResponse {
  string resourceId = 1;
  string resourceName = 2;
  string resourceDescription = 3;
  string actionId = 4;
  string actionName = 5;
  string actionDescription = 6;
  string code = 7;
}

message PermissionCreateInput {
  string resourceId = 1;
  string actionId = 2;
}

message PermissionCreateOutput {
  string id = 1;
}

message PermissionFindInput {
  string id = 1;
}

message PermissionFindAllOutput {
  arc.PagedElementOutput details = 1;
  repeated PermissionResponse permissions = 2;
}

message PermissionDeleteInput {
  string id = 1;
}

message InternalCheckUserInput {
  string resourceName = 1;
  string actionName = 2;
}

message CheckUserInput {
  string userId = 1;
  repeated InternalCheckUserInput permissions = 2;
}