syntax = "proto3";
package services.authorization.schema.proto.v1;
option go_package = "nexa/services/authorization/shared/proto";

import "google/protobuf/empty.proto";
import "arc/paged.proto";

service ActionServer {
  rpc Create(ActionCreateInput) returns (ActionCreateOutput);
  rpc Update(ActionUpdateInput) returns (google.protobuf.Empty);
  rpc Delete(ActionDeleteInput) returns (google.protobuf.Empty);
  rpc Find(ActionFindInput) returns (ActionResponse);
  rpc FindAll(arc.PagedElementInput) returns (ActionFindAllResponse);
}

message ActionCreateInput {
  string name = 1;
  optional string description = 2;
}

message ActionCreateOutput {
  string id = 1;
}

message ActionUpdateInput {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
}

message ActionDeleteInput {
  string id = 1;
}

message ActionFindInput {
  string id = 1;
}

message ActionResponse {
  string id = 1;
  string name = 2;
  string description = 3;
}

message ActionFindAllResponse {
  arc.PagedElementOutput details = 1;
  repeated ActionResponse actions = 2;
}