services:
  authz-db:
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U nexa -d nexa-authz" ]
      start_period: 5s
      retries: 5
      interval: 20s
      timeout: 30s
    environment:
      - POSTGRES_DB=nexa-authz
      - POSTGRES_USER=nexa
      - POSTGRES_PASSWORD=nexa
    networks:
      - naz_network
  nexa-authz-migrate:
    build:
      dockerfile: ./docker/migrate.Dockerfile
    restart: on-failure
    depends_on:
      authz-db:
        condition: service_healthy
    environment:
      - PG_ADDRESS=authz-db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-authz
      - PG_IS_SECURE=false
    networks:
      - naz_network
  nexa-authz-seed:
    build:
      dockerfile: ./docker/seed.Dockerfile
    restart: on-failure
    depends_on:
      authz-db:
        condition: service_healthy
      nexa-authz-migrate:
        condition: service_completed_successfully
        restart: false
    environment:
      - PG_ADDRESS=authz-db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-authz
      - PG_IS_SECURE=false
    networks:
      - naz_network
  nexa-authz:
    build:
      dockerfile: ./docker/app.Dockerfile
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=localhost:8080", "-service=nexa-authorization" ]
      retries: 3
      interval: 60s
      start_period: 5s
      timeout: 30s
    depends_on:
      nexa-authz-seed:
        condition: service_completed_successfully
        restart: false
      nexa-authz-migrate:
        condition: service_completed_successfully
        restart: false
    environment:
      - PG_ADDRESS=authz-db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-authz
      - PG_PARAMETER=application_name=nexa-authorization
      - PG_IS_SECURE=false
#      - OTLP_GRPC_COLLECTOR_ADDRESS=jaeger:4317
#    ports:
#      - "8080:8080"
#      - "8081"
    networks:
      - naz_network
networks:
  naz_network:
    driver: bridge