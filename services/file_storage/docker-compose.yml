services:
  db:
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U nexa -d nexa-file" ]
      interval: 5s
      retries: 10
    environment:
      - POSTGRES_DB=nexa-file
      - POSTGRES_USER=nexa
      - POSTGRES_PASSWORD=nexa
    networks:
      - nf_network
  minio:
    image: quay.io/minio/minio
    healthcheck:
      test: ["CMD-SHELL", "mc ready local"]
      retries: 10
      interval: 5s
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=rootroot123
    ports:
      - "9000"
      - "9001"
    command: server /data
    networks:
      - nf_network
  jaeger:
    image: jaegertracing/all-in-one:1.58
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - nf_network
  nexa-storage-migrate:
    build:
      dockerfile: ./docker/migrate.Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PG_ADDRESS=db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-file
      - PG_IS_SECURE=false
    networks:
      - nf_network
  nexa-storage:
    build:
      dockerfile: ./docker/app.Dockerfile
    restart: unless-stopped
    depends_on:
      nexa-storage-migrate:
        condition: service_completed_successfully
        restart: false
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started
      minio:
        condition: service_healthy
    environment:
      - PG_ADDRESS=db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-file
      - PG_PARAMETER=application_name=nexa-file
      - PG_IS_SECURE=false
      - OTLP_GRPC_COLLECTOR_ADDRESS=jaeger:4317
      - MINIO_ADDRESS=minio:9000
      - MINIO_ACCESS_KEY_ID=root
      - MINIO_SECRET_KEY=rootroot123
    ports:
      - "8080:8080"
      - "8081"
    networks:
      - nf_network
networks:
  nf_network:
    driver: bridge