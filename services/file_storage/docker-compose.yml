services:
  file-db:
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U nexa -d nexa-file" ]
      interval: 5s
      retries: 10
    environment:
      - POSTGRES_DB=nexa-file
      - POSTGRES_USER=nexa
      - POSTGRES_PASSWORD=nexa
    networks:
      - nf_network
  minio:
    image: quay.io/minio/minio
    healthcheck:
      test: ["CMD-SHELL", "mc ready local"]
      retries: 10
      interval: 5s
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=rootroot123
    command: server /data
    networks:
      - nf_network
  nexa-storage-migrate:
    build:
      dockerfile: ./docker/migrate.Dockerfile
    restart: on-failure
    depends_on:
      file-db:
        condition: service_healthy
    environment:
      - PG_ADDRESS=file-db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-file
      - PG_IS_SECURE=false
    networks:
      - nf_network
  storage-token_generator:
    build:
      context: ../../token_generator/
      dockerfile: Dockerfile
    entrypoint: /bin/sh -c "./main > /output/token.txt"
    volumes:
      - storage-token_output:/output
  nexa-storage-seed:
    build:
      dockerfile: ./docker/seed.Dockerfile
    restart: on-failure
    depends_on:
      nexa-storage-migrate:
        condition: service_completed_successfully
      storage-token_generator:
        condition: service_completed_successfully
    #      nexa-authz:
    #        condition: service_healthy
    environment:
      - PG_ADDRESS=file-db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-file
      - PG_IS_SECURE=false
    #      - AUTHZ_SERVICE_ADDR=nexa-authz:8080
    networks:
      - nf_network
    volumes:
      - storage-token_output:/output
  nexa-storage:
    build:
      dockerfile: ./docker/app.Dockerfile
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=localhost:8080"]
      retries: 3
      interval: 60s
      start_period: 5s
      timeout: 30s
    depends_on:
      nexa-storage-migrate:
        condition: service_completed_successfully
        restart: false
      minio:
        condition: service_healthy
    environment:
      - PG_ADDRESS=file-db
      - PG_USERNAME=nexa
      - PG_PASSWORD=nexa
      - PG_DB_NAME=nexa-file
      - PG_PARAMETER=application_name=nexa-file
      - PG_IS_SECURE=false
      - BUCKET_NAME=something
      - MINIO_ADDRESS=minio:9000
      - MINIO_ACCESS_KEY_ID=root
      - MINIO_SECRET_KEY=rootroot123
#      - OTLP_GRPC_COLLECTOR_ADDRESS=jaeger:4317
#    ports:
#      - "8080:8080"
#      - "8081"
    networks:
      - nf_network

networks:
  nf_network:
    driver: bridge

volumes:
  storage-token_output: