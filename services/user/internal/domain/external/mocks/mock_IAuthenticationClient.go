// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"
	dto "nexa/services/user/internal/domain/dto"

	mock "github.com/stretchr/testify/mock"

	types "nexa/shared/types"
)

// AuthenticationClientMock is an autogenerated mock type for the IAuthenticationClient type
type AuthenticationClientMock struct {
	mock.Mock
}

type AuthenticationClientMock_Expecter struct {
	mock *mock.Mock
}

func (_m *AuthenticationClientMock) EXPECT() *AuthenticationClientMock_Expecter {
	return &AuthenticationClientMock_Expecter{mock: &_m.Mock}
}

// DeleteCredentials provides a mock function with given fields: ctx, userId
func (_m *AuthenticationClientMock) DeleteCredentials(ctx context.Context, userId types.Id) error {
	ret := _m.Called(ctx, userId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCredentials")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.Id) error); ok {
		r0 = rf(ctx, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AuthenticationClientMock_DeleteCredentials_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteCredentials'
type AuthenticationClientMock_DeleteCredentials_Call struct {
	*mock.Call
}

// DeleteCredentials is a helper method to define mock.On call
//   - ctx context.Context
//   - userId types.Id
func (_e *AuthenticationClientMock_Expecter) DeleteCredentials(ctx interface{}, userId interface{}) *AuthenticationClientMock_DeleteCredentials_Call {
	return &AuthenticationClientMock_DeleteCredentials_Call{Call: _e.mock.On("DeleteCredentials", ctx, userId)}
}

func (_c *AuthenticationClientMock_DeleteCredentials_Call) Run(run func(ctx context.Context, userId types.Id)) *AuthenticationClientMock_DeleteCredentials_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(types.Id))
	})
	return _c
}

func (_c *AuthenticationClientMock_DeleteCredentials_Call) Return(_a0 error) *AuthenticationClientMock_DeleteCredentials_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AuthenticationClientMock_DeleteCredentials_Call) RunAndReturn(run func(context.Context, types.Id) error) *AuthenticationClientMock_DeleteCredentials_Call {
	_c.Call.Return(run)
	return _c
}

// GenerateToken provides a mock function with given fields: ctx, _a1
func (_m *AuthenticationClientMock) GenerateToken(ctx context.Context, _a1 *dto.TokenGenerationDTO) (dto.TokenResponseDTO, error) {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GenerateToken")
	}

	var r0 dto.TokenResponseDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *dto.TokenGenerationDTO) (dto.TokenResponseDTO, error)); ok {
		return rf(ctx, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *dto.TokenGenerationDTO) dto.TokenResponseDTO); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Get(0).(dto.TokenResponseDTO)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *dto.TokenGenerationDTO) error); ok {
		r1 = rf(ctx, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AuthenticationClientMock_GenerateToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateToken'
type AuthenticationClientMock_GenerateToken_Call struct {
	*mock.Call
}

// GenerateToken is a helper method to define mock.On call
//   - ctx context.Context
//   - _a1 *dto.TokenGenerationDTO
func (_e *AuthenticationClientMock_Expecter) GenerateToken(ctx interface{}, _a1 interface{}) *AuthenticationClientMock_GenerateToken_Call {
	return &AuthenticationClientMock_GenerateToken_Call{Call: _e.mock.On("GenerateToken", ctx, _a1)}
}

func (_c *AuthenticationClientMock_GenerateToken_Call) Run(run func(ctx context.Context, _a1 *dto.TokenGenerationDTO)) *AuthenticationClientMock_GenerateToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*dto.TokenGenerationDTO))
	})
	return _c
}

func (_c *AuthenticationClientMock_GenerateToken_Call) Return(_a0 dto.TokenResponseDTO, _a1 error) *AuthenticationClientMock_GenerateToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AuthenticationClientMock_GenerateToken_Call) RunAndReturn(run func(context.Context, *dto.TokenGenerationDTO) (dto.TokenResponseDTO, error)) *AuthenticationClientMock_GenerateToken_Call {
	_c.Call.Return(run)
	return _c
}

// VerifyToken provides a mock function with given fields: ctx, verificationDTO
func (_m *AuthenticationClientMock) VerifyToken(ctx context.Context, verificationDTO *dto.TokenVerificationDTO) (types.Id, error) {
	ret := _m.Called(ctx, verificationDTO)

	if len(ret) == 0 {
		panic("no return value specified for VerifyToken")
	}

	var r0 types.Id
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *dto.TokenVerificationDTO) (types.Id, error)); ok {
		return rf(ctx, verificationDTO)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *dto.TokenVerificationDTO) types.Id); ok {
		r0 = rf(ctx, verificationDTO)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.Id)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *dto.TokenVerificationDTO) error); ok {
		r1 = rf(ctx, verificationDTO)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AuthenticationClientMock_VerifyToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VerifyToken'
type AuthenticationClientMock_VerifyToken_Call struct {
	*mock.Call
}

// VerifyToken is a helper method to define mock.On call
//   - ctx context.Context
//   - verificationDTO *dto.TokenVerificationDTO
func (_e *AuthenticationClientMock_Expecter) VerifyToken(ctx interface{}, verificationDTO interface{}) *AuthenticationClientMock_VerifyToken_Call {
	return &AuthenticationClientMock_VerifyToken_Call{Call: _e.mock.On("VerifyToken", ctx, verificationDTO)}
}

func (_c *AuthenticationClientMock_VerifyToken_Call) Run(run func(ctx context.Context, verificationDTO *dto.TokenVerificationDTO)) *AuthenticationClientMock_VerifyToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*dto.TokenVerificationDTO))
	})
	return _c
}

func (_c *AuthenticationClientMock_VerifyToken_Call) Return(_a0 types.Id, _a1 error) *AuthenticationClientMock_VerifyToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AuthenticationClientMock_VerifyToken_Call) RunAndReturn(run func(context.Context, *dto.TokenVerificationDTO) (types.Id, error)) *AuthenticationClientMock_VerifyToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewAuthenticationClientMock creates a new instance of AuthenticationClientMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthenticationClientMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthenticationClientMock {
	mock := &AuthenticationClientMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
