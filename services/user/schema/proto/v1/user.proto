syntax = "proto3";
package services.user.schema.proto.v1;
option go_package = "nexa/services/user/shared/proto";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

service UserService {
  rpc Create(CreateUserRequest) returns (google.protobuf.Empty);
  rpc Update(UpdateUserRequest) returns (google.protobuf.Empty);
  rpc UpdateVerified(UpdateUserVerifiedRequest) returns (google.protobuf.Empty);
  rpc UpdatePassword(UpdateUserPasswordRequest) returns (google.protobuf.Empty);
  rpc ResetPassword(ResetUserPasswordRequest) returns (google.protobuf.Empty);
  rpc FindUserByIds(FindUsersByIdsRequest) returns (stream User);
  rpc FindUserByEmail(FindUsersByEmailRequest) returns (stream User);
  rpc BannedUser(BannedUserRequest) returns (google.protobuf.Empty);
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

message CreateResponse {
  string id = 1;
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string first_name = 4;
  optional string last_name = 5;
  optional string bio = 6;
}

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  bool is_verified = 4;
  repeated string roles = 5;
}

message UpdateUserRequest {
  string id = 1;
  optional string username = 2;
  optional string email = 3;
}

message UpdateUserPasswordRequest {
  string id = 1;
  string last_password = 2;
  string new_password = 3;
}

message UpdateUserVerifiedRequest {
  string id = 1;
}

message FindUsersByIdsRequest {
  repeated string ids = 1;
}

message FindUsersByEmailRequest {
  repeated string emails = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message BannedUserRequest {
  string id = 1;
  google.protobuf.Duration duration = 2;
}

message ResetUserPasswordRequest {
  string id = 1;
  string new_password = 2;
}